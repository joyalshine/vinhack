<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel='stylesheet' href='/stylesheets/styleLMSHome.css' />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
        integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script type="text/javascript">
        function preventBack() { window.history.forward(); }
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };  
    </script>
</head>

<body>
    <div class="overlay" onclick="off()"></div>
    <button style="display: none;" id="nonPurpose" value="{{justLoggedIn}}"></button>
    <header class="text-center" id="preProductionHomeHeader">
        <div class="">
            <img src="https://vit.ac.in/files/gravitas19/images/vit_white.png" id="preProductionHomeLogo" alt="">
        </div>
        <div class="topright">
            <a href="" style="text-decoration: none; color:#fff">
                <img src="https://cdn-icons-png.flaticon.com/128/3237/3237472.png" width="40" height="40"
                    style="margin-right:5px" alt="">
                {{user.facultyName}}
            </a>
        </div>
    </header>
    <div class="containerMain">
        <a href="#" class="toggleBox">
            <span class="icon"></span>
        </a>
        <ul class="navItems">
            <li>
                <a href="/lms-home-original">
                    <i class="fa fa-home" style="--i:1"></i>
                    <span style="--g:1">Home</span>
                </a>
            </li>
            <li>
                <a href="/lms-home">
                    <i class="fa fa-home" style="--i:2"></i>
                    <span style="--g:2">Session plan</span>
                </a>
            </li>
            <!--<li>
                <a href="/lms-status">
                    <i class="fa fa-globe" style="--i:3"></i>
                    <span style="--g:3">status</span>
                </a>
            </li>-->
            <li>
                <a href="/logout">
                    <i class="fa fa-globe" style="--i:4"></i>
                    <span style="--g:4">logout</span>
                </a>
            </li>
        </ul>
    </div>
    <section class="menuDiv">
        <form class="row g-1">
            <div class="col-12 col-md-6 m-2 p-3" style="background-color: powderblue;border-radius: 10px;">
                <div class="row m-2">
                    <div class="col-lg-5 col-md-5 col-sm-5">
                        <select class="form-select" name="semester" id="idSemester" required="required"
                            onchange="dynamicCourseList()">
                            <option value="" selected>Choose Semester..</option>
                            {{#each semesters}}
                            <option value="{{this}}">{{this}}</option>
                            {{/each}}
                        </select>
                    </div>
                </div>
                <div class="row m-2 pt-3">
                    <div class="col-8 col-md-9 col-lg-10">
                        <select class="form-select" name="courseInfo" id="idCourseInfo" required="required">
                            <option value="" selected>Choose Course..</option>
                            {{#each courses}}
                            <option value="{{this.value}}">{{this.display}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="col-2 col-md-2 col-lg-2">
                        <button type="button" class="btn btn-primary" id="fetchCoursePlan"
                            onclick="generateCoursePlan('null')">Generate</button>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-5 m-2 p-2"
                style="background-color: powderblue;border-radius: 10px;display: flex;justify-content: center;align-items: center;">
                <div class="col-auto">
                    <div class="row m-2">
                        <div class="col-7">
                            <input type="text" class="form-control" id="searchCourseId" placeholder="Course ID"
                                onkeyup="this.value = this.value.toUpperCase()">
                        </div>
                        <div class="col-3">
                            <button type="button" class="btn btn-primary" id="fetchCoursePlan"
                                onclick="searchCourse()">Search</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </section>

    <section id="tableSection" class="table-responsive-lg p-5 hide" style="overflow-x:auto; margin-top: 15px;">
        <div class="text-center mb-4">
            <h4 id="courseNameDisplay" style="color: royalblue;"></h4>
        </div>
        <table class="table table-sm table-bordered  table-striped" style="">
            <thead>
                <tr>
                    <th scope="col" rowspan="2" style="width: 30px;" class="text-center align-middle">W#</th>
                    <th scope="col" rowspan="2" style="width: 50px;" class="text-center align-middle">Week Title</th>
                    <th scope="col" rowspan="2" style="width: 30px;" class="text-center align-middle">Sno</th>
                    <th scope="col" rowspan="2" style="width: 150px;" class="text-center align-middle">Topic</th>
                    <th scope="col" rowspan="2" style="width: 120px;" class="text-center align-middle">Youtube Link</th>
                    <th scope="col" colspan="2" style="width: 50px;" class="text-center align-middle">Duration</th>
                    <th scope="col" rowspan="2" style="width: 50px;" class="text-center align-middle">Files</th>
                </tr>
                <tr>
                    <th scope="col" style="width: 25px;" class="text-center">MM</th>
                    <th scope="col" style="width: 30px;" class="text-center">SS</th>
                </tr>
            </thead>
            <tbody id="tableBody">

            </tbody>
        </table>
    </section>
    <section class="text-center hide" id="addMessage">
        <span style="font-size: 20px;">No Course Plan available..</span>
    </section>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js"
        integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js"
        integrity="sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK"
        crossorigin="anonymous"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        var toggleClick = document.querySelector(".toggleBox");
        var containerMain = document.querySelector(".containerMain");
        var overlayScreen = document.querySelector(".overlay");

        toggleClick.addEventListener('click', () => {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        })

        function off() {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        }

        let globalCourseList = {}
        window.onload = function showLoggedIn() {
            justLoggedIn = document.getElementById("nonPurpose").value
            if (justLoggedIn == "1") {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 4000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: 'Signed in successfully'
                })
            }

            fetch("/lms-home", {
                headers: { 'Content-Type': "application/json" },
                method: "POST",
                body: JSON.stringify({}),
            }).then(res => res.json()).then(fetchedData => {
                globalCourseList = fetchedData.courses
            })
        }

        function generateCoursePlan(param) {
            let data = ""
            let element = ""
            if (param != 'null') {
                data = param
            }
            else {
                element = document.getElementById("idCourseInfo")
                data = element.value
            }
            let addMessage = document.getElementById("addMessage")
            let table = document.getElementById("tableSection")
            let tableBody = document.getElementById("tableBody")
            addMessage.classList.add("hide")

            if (data === "") {
                element.setCustomValidity("Please Select an item in the list");
                element.reportValidity();
            }
            else {
                fetch("/lms-session-plan", {
                    headers: { 'Content-Type': "application/json" },
                    method: "POST",
                    body: JSON.stringify({ key: data }),
                }).then(res => res.json()).then(fetchedData => {
                    if (fetchedData.fetchedData.coursePlan) {
                        let coursePlan = fetchedData.fetchedData.coursePlan
                        let files = fetchedData.fetchedData.files
                        let links = fetchedData.fetchedData.postTopicsCompleted
                        let individualStatus = fetchedData.fetchedData.individualStatus
                        globalPostCompletedTopics = links
                        let courseNameDisplay = document.getElementById("courseNameDisplay")
                        courseNameDisplay.innerText = fetchedData.fetchedData.courseName + " (" + fetchedData.fetchedData.courseId + ")"
                        table.classList.remove("hide")
                        tableBody.innerHTML = ""
                        let n = 1

                        let trIntro = document.createElement("tr")
                        let td1Intro = document.createElement("td")
                        let td2Intro = document.createElement("td")
                        let td3Intro = document.createElement("td")
                        let td4Intro = document.createElement("td")
                        let td5Intro = document.createElement("td")
                        let td6Intro = document.createElement("td")
                        let td7Intro = document.createElement("td")
                        let td8Intro = document.createElement("td")
                        let urlIntro = document.createElement("a")

                        td4Intro.innerHTML = "Course Introduction"
                        td4Intro.setAttribute("id", "introTopic")


                        if (individualStatus["intro"] == "confirmed") {
                            urlIntro.setAttribute("href", links["intro"]["videoLink"])
                            urlIntro.setAttribute("style", "text-decoration: none;")
                            urlIntro.innerHTML = links["intro"]["videoLink"]

                            td6Intro.innerText = links["intro"]["duration"].split(":")[0]
                            td7Intro.innerText = links["intro"]["duration"].split(":")[1]
                        } else {
                            urlIntro.innerHTML = ""
                        }

                        td6Intro.setAttribute("class", "text-center align-middle")

                        td7Intro.setAttribute("class", "text-center align-middle")

                        trIntro.appendChild(td1Intro)
                        trIntro.appendChild(td2Intro)
                        trIntro.appendChild(td3Intro)
                        trIntro.appendChild(td4Intro)
                        td5Intro.appendChild(urlIntro)
                        trIntro.appendChild(td5Intro)
                        trIntro.appendChild(td6Intro)

                        trIntro.appendChild(td7Intro)
                        trIntro.appendChild(td8Intro)
                        tableBody.appendChild(trIntro)

                        while (n <= parseInt(coursePlan.weeks)) {
                            let W = "W" + n

                            let names = ["file", "quiz", "webLink"]
                            let file = {}
                            for (var i = 0; i < 3; i++) {
                                if (files[W + "-" + names[i]] != null) {
                                    file[names[i]] = files[W + "-" + names[i]]
                                }
                            }

                            let t = 0
                            let firstPrint = "undone"
                            for (var i = 1; i <= 10; i++) {
                                let key = W + "-" + i

                                if (coursePlan[key] == null) {
                                    continue
                                }
                                t++
                                let link = links[key]
                                let tr = document.createElement("tr")
                                let td1 = document.createElement("td")
                                let td2 = document.createElement("td")
                                let td3 = document.createElement("td")
                                let td4 = document.createElement("td")
                                let td5 = document.createElement("td")
                                let url = document.createElement("a")
                                let tdFiles = document.createElement("td")
                                if (firstPrint == "undone") {
                                    firstPrint = "done"
                                    let td6 = document.createElement("td")
                                    let td7 = document.createElement("td")

                                    td1.setAttribute("rowspan", "7")
                                    td1.setAttribute("class", "text-center align-middle")
                                    td1.setAttribute("id", "id" + W)
                                    td1.innerHTML = W

                                    td2.setAttribute("rowspan", "7")
                                    td2.setAttribute("class", "text-center align-middle")
                                    td2.setAttribute("id", "id" + W + "Title")
                                    if (!coursePlan[W]) { }
                                    else {
                                        td2.innerHTML = coursePlan[W]
                                    }

                                    td3.innerHTML = i
                                    td3.setAttribute("class", "text-center")

                                    td4.innerHTML = coursePlan[key]
                                    td4.setAttribute("id", key + "Topic")

                                    if (individualStatus[key] == "confirmed") {
                                        url.setAttribute("href", link["videoLink"])
                                        url.setAttribute("style", "text-decoration: none;")
                                        url.innerHTML = link["videoLink"]

                                        td6.innerText = link["duration"].split(":")[0]
                                        td7.innerText = link["duration"].split(":")[1]
                                    } else {
                                        url.innerHTML = ""
                                    }


                                    tdFiles.setAttribute("id", "id" + W + "File")
                                    if (jQuery.isEmptyObject(file)) { }
                                    else {
                                        tdFiles.setAttribute("class", "text-center")
                                        let keysTemp = Object.keys(file)

                                        if (keysTemp.includes("file")) {
                                            let a = document.createElement("a")
                                            let i = document.createElement("i")
                                            let div = document.createElement("div")
                                            a.setAttribute("href", file["file"])
                                            a.setAttribute("target", "_blank")
                                            a.setAttribute("class","filesDownloadATag")
                                            if(file["webLink"].split(".")[1] == "rar"){
                                                a.setAttribute("download",W + "-Lecture Notes.rar")
                                            }
                                            else{
                                                a.setAttribute("download",W + "-Lecture Notes")
                                            }
                                            a.innerHTML = ""
                                            a.setAttribute("style", "text-decoration: none;")
                                            i.setAttribute("class","fa-solid fa-download filesIcon")
                                            div.setAttribute("class","fileDisplayDiv")
                                            a.appendChild(div)
                                            div.innerText = "Lecture Notes"
                                            div.appendChild(i)
                                            tdFiles.appendChild(a)
                                        }
                                        if (keysTemp.includes("quiz")) {
                                            let a = document.createElement("a")
                                            let i = document.createElement("i")
                                            let div = document.createElement("div")
                                            a.setAttribute("href", file["quiz"])
                                            a.setAttribute("target", "_blank")
                                            a.setAttribute("download", W + "-Quiz")
                                            a.setAttribute("class","filesDownloadATag")
                                            a.setAttribute("style", "text-decoration: none;")
                                            i.setAttribute("class","fa-solid fa-download filesIcon")
                                            div.setAttribute("class","fileDisplayDiv")
                                            a.appendChild(div)
                                            div.innerText = "Quiz"
                                            div.appendChild(i)
                                            tdFiles.appendChild(a)
                                        }
                                        if (keysTemp.includes("webLink")) {
                                            let a = document.createElement("a")
                                            let i = document.createElement("i")
                                            let div = document.createElement("div")
                                            a.setAttribute("href", file["webLink"])
                                            a.setAttribute("target", "_blank")
                                            a.setAttribute("class","filesDownloadATag")
                                            if(file["webLink"].split(".")[1] == "rar"){
                                                a.setAttribute("download",W + "-WebLink.rar")
                                            }
                                            else{
                                                a.setAttribute("download",W + "-WebLink")
                                            }
                                            a.innerHTML = ""
                                            a.setAttribute("style", "text-decoration: none;")
                                            i.setAttribute("class","fa-solid fa-download filesIcon")
                                            div.setAttribute("class","fileDisplayDiv")
                                            a.appendChild(div)
                                            div.innerText = "Web Link"
                                            div.appendChild(i)
                                            tdFiles.appendChild(a)
                                        }
                                    }


                                    td6.setAttribute("class", "text-center align-middle")
                                    td7.setAttribute("class", "text-center align-middle")

                                    tr.appendChild(td1)
                                    tr.appendChild(td2)
                                    tr.appendChild(td3)
                                    tr.appendChild(td4)
                                    td5.appendChild(url)
                                    tr.appendChild(td5)
                                    tr.appendChild(td6)
                                    tr.appendChild(td7)
                                    tr.appendChild(tdFiles)
                                }
                                else {
                                    td1.innerHTML = i
                                    td1.setAttribute("class", "text-center")

                                    td2.innerHTML = coursePlan[key]
                                    td2.setAttribute("id", key + "Topic")

                                    if (individualStatus[key] == "confirmed") {
                                        url.setAttribute("href", link["videoLink"])
                                        url.setAttribute("style", "text-decoration: none;")
                                        url.innerHTML = link["videoLink"]

                                        td4.innerText = link["duration"].split(":")[0]
                                        td5.innerText = link["duration"].split(":")[1]
                                    } else {
                                        url.innerHTML = ""
                                    }


                                    td4.setAttribute("class", "text-center align-middle")

                                    td5.setAttribute("class", "text-center align-middle")

                                    tr.appendChild(td1)
                                    tr.appendChild(td2)
                                    td3.appendChild(url)

                                    tr.appendChild(td3)
                                    tr.appendChild(td4)

                                    tr.appendChild(td5)
                                }
                                tableBody.appendChild(tr)
                            }
                            n++;
                            let changeRowSpanWeekNo = document.getElementById("id" + W)
                            let changeRowSpanWeekTitle = document.getElementById("id" + W + "Title")
                            let changeRowSpanFileSection = document.getElementById("id" + W + "File")
                            if (changeRowSpanWeekNo != null) {
                                changeRowSpanWeekNo.setAttribute("rowspan", t)
                                changeRowSpanWeekTitle.setAttribute("rowspan", t)
                                changeRowSpanFileSection.setAttribute("rowspan", t)
                            }
                            else {
                                break
                            }
                        }
                    }
                    else {
                        tableBody.innerHTML = ""
                        table.classList.add("hide")
                        addMessage.classList.remove("hide")
                    }

                });
            }
        }

        function dynamicCourseList() {
            let semester = document.getElementById("idSemester").value
            if (semester) {
                $("#idCourseInfo").empty()
                $("#idCourseInfo").append(`
                    <option value="" selected>Choose Course..</option>
                `)
                for (var i = 0; i < globalCourseList.length; i++) {
                    if (globalCourseList[i].semester == parseInt(semester)) {
                        $("#idCourseInfo").append(`
                            <option value="${globalCourseList[i].value}">${globalCourseList[i].display}</option>
                        `)
                    }
                }
            }
            else {
                $("#idCourseInfo").empty()
                $("#idCourseInfo").append(`
                    <option value="" selected>Choose Course..</option>
                `)
                for (var i = 0; i < globalCourseList.length; i++) {
                    $("#idCourseInfo").append(`
                        <option value="${globalCourseList[i].value}">${globalCourseList[i].display}</option>
                    `)
                }
            }

        }

        function searchCourse() {
            let courseId = document.getElementById("searchCourseId").value
            if (courseId) {
                let flag = false
                let courseSelector = document.getElementById("idCourseInfo")
                for (var i = 0; i < globalCourseList.length; i++) {
                    if (globalCourseList[i].courseId == courseId) {
                        generateCoursePlan(globalCourseList[i].value)
                        flag = true
                        break
                    }
                }
                if (!flag) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Oops...',
                        text: 'No course found!'
                    })
                }

            }
            else {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top',
                    showConfirmButton: false,
                    timer: 3500,
                    timerProgressBar: false,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'error',
                    title: 'Enter a Course ID'
                })
            }
        }
    </script>
</body>

</html>