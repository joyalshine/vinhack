<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel='stylesheet' href='/stylesheets/styleFacultySlotBooking.css' />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"
        integrity="sha512-RNLkV3d+aLtfcpEyFG8jRbnWHxUqVZozacROI4J2F1sTaDqo1dPQYs01OMi1t1w9Y2FdbSCDSQ2ZVdAC8bzgAg=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link href="https://cdn.jsdelivr.net/npm/mc-datepicker/dist/mc-calendar.min.css" rel="stylesheet" />

    <script src="https://cdn.jsdelivr.net/npm/mc-datepicker/dist/mc-calendar.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
        integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
    <div class="overlay" onclick="off()"></div>
    <header class="text-center" id="preProductionHomeHeader">

        <div class="">
            <img src="https://vit.ac.in/files/gravitas19/images/vit_white.png" id="preProductionHomeLogo" alt="">
        </div>

        <div class="topright">
            <a href="" style="text-decoration: none; color:#fff">
                <img src="https://cdn-icons-png.flaticon.com/128/3237/3237472.png" width="40" height="40" alt="">
                {{user.facultyName}}
            </a>
        </div>

    </header>
    <div class="containerMain">
        <a href="#" class="toggleBox">
            <span class="icon"></span>
        </a>
        <ul class="navItems">
            <li>
                <a href="/faculty-home">
                    <i class="fa fa-home" style="--i:1"></i>
                    <span style="--g:1">home</span>
                </a>
            </li>
            <li>
                <a href="/faculty-course-plan">
                    <i class="fa fa-solid fa-book" style="--i:2"></i>
                    <span style="--g:2">Course Plan</span>
                </a>
            </li>
            <li>
                <a href="/faculty-confirmation">
                    <i class="fa-solid fa-check-to-slot" style="--i:3"></i>
                    <span style="--g:3">Confirmation</span>
                </a>
            </li>
            <li>
                <a href="/faculty-slot-booking">
                    <i class="fa-solid fa-user" style="--i:4"></i>
                    <span style="--g:4">Slot Booking</span>
                </a>
            </li>
            <li>
                <a href="/logout">
                    <i class="fa-solid fa-right-from-bracket" style="--i:5"></i>
                    <span style="--g:5">logout</span>
                </a>
            </li>
        </ul>
    </div>

    <div class="mainBody">
        <section class="container">
            <section class="">
                <div class="container">
                    <div class="bookedSlotViewHeader text-center">
                        <h3 class="cardHeading">Slots Booked</h3>
                    </div>
                    <div class="bookedSlotBody text-center">
                        {{#each booking}}
                        <div class="row" style="display: flex;justify-content: center;">
                            <div class="col-lg-3 col-3" id="card">
                                <h6>{{this.studio}}</h6>
                            </div>
                            <div class="col-lg-3 col-3" id="card">
                                <h6>{{this.day}}</h6>
                            </div>
                            <div class="col-lg-3 col-3" id="card">
                                <h6>{{this.slot}}</h6>
                            </div>
                            <div class="col-lg-1 col-1" id="cardButton">
                                <button type="button" class="btn  btn-danger" onclick="unBook('{{this.value}}')"><i
                                        class="fa-sharp fa-solid fa-trash"></i></button>
                            </div>
                        </div>
                        {{/each}}
                        {{#if booking}}
                        {{else}}
                        <h5>No Bookings Available....</h5>
                        {{/if}}
                    </div>
                </div>
            </section>

            <section id="" class="datePickerSection">
                <div class="container">
                    <div class="row">
                        <div class="col-md-6 col-lg-6 p-5 inputSection">
                            <div class="row mb-2">
                                <div class="col-md-12 col-lg-8 mt-3">
                                    <select name="" id="studioSelect" class="form-select">
                                        <option value="">Select Studio....</option>
                                        <option value="mainStudio">Main Studio</option>
                                        <option value="virtualStudio">Virtual Studio</option>
                                        <option value="vgbStudio">VGB Studio</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row dateSelector">
                                <div class="col-md-12 col-lg-8 mt-3">
                                    <a onclick="opendate()"><i class="fa-solid fa-calendar-days icon1"></i></a>
                                    <input id="datepicker" class="input-field" placeholder="Select Date">
                                </div>
                                <div class="col-md-6 col-lg-4 mt-3">
                                    <button type="button" class="btn btn-info" onclick="showSlots()">Show Slots</button>
                                </div>
                            </div>
                            <div class=" row mt-5 text-center">
                                <div class="col-6 col-sm-6 col-md-8 col-lg-7">
                                    <button type="button" class="btn btn-primary" onclick="bookSlot()">Book
                                        Slot</button>
                                </div>
                                <div class="col-6 col-sm-6 col-md-4 col-lg-5">
                                    <button type="button" class="btn btn-primary" onclick="clearData()">Clear</button>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-5 p-3 hide" id="slotSection">
                            <div class="text-center" style="padding-left: 2.5em;">
                                <h3 id="slotHeader"></h3>
                            </div>
                            <div class="slotBody text-center p-3" style="">
                                <ul id="slotDisplay">

                                </ul>
                            </div>
                        </div>

                    </div>
                </div>
            </section>
        </section>


        <div class="container p-4" id="sheduleViewSection" style="">
            <hr>
            <div class="bookedSlotViewHeader text-center">
                <h3 class="cardHeading mb-5">Schedule View</h3>
            </div>
            <section class="menuDiv row">
                <div class="col-md-4">
                    <select class="form-select m-1" name="studioName" id="idStudioName">
                        <option value="" selected>Select Studio...</option>
                        <option value="mainStudio">Main Studio</option>
                        <option value="virtualStudio">Virtual Studio</option>
                        <option value="vgbStudio">VGB Studio</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-primary m-1" id="generateSheduleBtn"
                        onclick="generateShedule()">Generate</button>
                </div>
            </section>
            <section id="sheduleSection" class="table-responsive-lg mt-4 hide mb-5" style="">
                <table class="table  table-bordered table-striped text-center">
                    <thead>
                        <th>Day</th>
                        <th>9:00 to 10:15</th>
                        <th>10:15 to 11:30</th>
                        <th>11:45 to 1:00</th>
                        <th>2:00 to 3:15</th>
                        <th>3:15 to 4:30</th>
                        <th>4:45 to 6:00</th>
                    </thead>
                    <tbody id="tableBody">

                    </tbody>
                </table>
            </section>
        </div>
    </div>

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js"
        integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js"
        integrity="sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK"
        crossorigin="anonymous"></script>
    <script>
        var toggleClick = document.querySelector(".toggleBox");
        var containerMain = document.querySelector(".containerMain");
        var overlayScreen = document.querySelector(".overlay");

        toggleClick.addEventListener('click', () => {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        })

        function off() {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        }

        const picker = MCDatepicker.create({
            el: '#datepicker',
            bodyType: 'modal',
            autoClose: true,
            closeOnBlur: false,
            customOkBTN: 'OK',
            minDate: new Date(),
            showCalendarDisplay: true,
        });

        function opendate() {
            if (allowDatePick) {
                picker.open()
            }
        }

        function generateShedule() {
            let studioName = document.getElementById("idStudioName").value
            if (studioName == "") {
                Swal.fire({
                    position: 'center',
                    icon: 'error',
                    title: 'Select a Studio',
                    showConfirmButton: false,
                    timer: 1500
                })
            }
            else {
                let tableBody = document.getElementById("tableBody")
                tableBody.innerHTML = ""
                fetch("/faculty-shedule-view", {
                    headers: { 'Content-Type': "application/json" },
                    method: "POST",
                    body: JSON.stringify({ studioName: studioName, flag: true }),
                }).then(res => res.json()).then(response => {
                    let display = document.getElementById("sheduleSection")
                    display.classList.remove("hide")
                    let data = response.response.shedule
                    let slots = ["slot1", "slot2", "slot3", "slot4", "slot5", "slot6", "slot7"]
                    let days = ["monday", "tuesday", "wednesday", "thursday", "friday"]
                    let displayDays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]
                    let displayStudioNames = { "mainStudio": "Main Studio", "virtualStudio": "Virtual Studio", "vgbStudio": "VGB Studio" }
                    let timeSlots = ["9:00 AM - 10:15 AM", "10:15 AM - 11:30 AM", "11:45 AM - 1:00 PM", "2:00 PM - 3:15 PM", "3:15 PM - 4:30 PM", "4:45 PM - 6:00 PM"]
                    let n = 0

                    while (n < 5) {
                        let day = days[n]
                        let dayData = data[day]
                        let tr = document.createElement("tr")

                        let th = document.createElement("th")
                        th.innerHTML = displayDays[n]
                        tr.appendChild(th)
                        for (var i = 0; i < 6; i++) {
                            if (dayData[slots[i]] != "") {
                                let value = displayDays[n] + "_" + timeSlots[i] + "_" + displayStudioNames[studioName] + "_" + dayData[slots[i]].split("-")[0] + "_" + day + "_" + studioName + "_" + slots[i] + "_" + dayData[slots[i]].split("-")[1]
                                let td = document.createElement("td")
                                let span = document.createElement("span")
                                let div = document.createElement('div')

                                span.setAttribute("class", "spanShedule")
                                span.setAttribute("data-value", value)
                                span.setAttribute("onclick", "showBooking(this)")
                                div.setAttribute("class", "divShedule align-middle")
                                div.setAttribute("id", value)
                                div.innerHTML = dayData[slots[i]].split("-")[0]

                                span.appendChild(div)
                                td.appendChild(span)

                                tr.appendChild(td)
                            }
                            else {
                                let td = document.createElement("td")
                                td.innerHTML = "-"
                                tr.appendChild(td)
                            }
                        }
                        tableBody.appendChild(tr)
                        n++
                    }
                })
            }
        }

        let lastClickedTimeSlot = ""
        let allowDatePick = true

        function timeSlotClicked(key) {
            lastClickedTimeSlot = key
        }

        function clearData() {
            let datePickerElement = document.getElementById("datepicker")
            let slotDisplay = document.getElementById("slotDisplay")
            let studioElement = document.getElementById("studioSelect")
            let display = document.getElementById("slotSection")
            display.classList.add("hide")
            slotDisplay.innerHTML = ""
            lastClickedTimeSlot = ""
            allowDatePick = true
            studioElement.value = ""
            studioElement.removeAttribute("disabled", "disabled")
            datePickerElement.removeAttribute("disabled", "disabled")
            picker.reset()
        }

        let displayMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
        let displayDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
        let fetchDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']
        let timeSlots = ["", "9:00 AM - 10:15 AM (IST)", "10:15 AM - 11:30 AM (IST)", "11:45 AM - 1:00 PM (IST)", "2:00 PM - 3:15 PM (IST)", "3:15 PM - 4:30 PM (IST)", "4:45 PM - 6:00 PM (IST)"]

        function showSlots() {
            let studioElement = document.getElementById("studioSelect")
            let studio = studioElement.value
            const day = picker.getDay();
            if (day == null || studio == "") {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000,
                    timerProgressBar: false,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                if (day == null) {
                    Toast.fire({
                        icon: 'error',
                        title: 'Select a Date'
                    })
                }
                else {
                    Toast.fire({
                        icon: 'error',
                        title: 'Select studio'
                    })
                }
            }
            else {
                let displayStr = ""

                const date = picker.getDate();
                const month = picker.getMonth();
                displayStr = displayDays[day] + " " + date + "th" + " " + displayMonths[month]

                let slotDisplay = document.getElementById("slotDisplay")
                slotDisplay.innerHTML = ""
                let header = document.getElementById("slotHeader")
                let datePickerElement = document.getElementById("datepicker")
                header.innerHTML = displayStr

                studioElement.setAttribute("disabled", "disabled")
                datePickerElement.setAttribute("disabled", "disabled")
                allowDatePick = false

                fetch("/faculty-slot-booking", {
                    headers: { 'Content-Type': "application/json" },
                    method: "POST",
                    body: JSON.stringify({ flag: '2', day: fetchDays[day], studio: studio }),
                }).then(res => res.json()).then(data => {
                    let shedule = data.data
                    let key = "slot"
                    for (var i = 1; i <= 6; i++) {
                        if (shedule[key + i] == "") {
                            let li = document.createElement("li")
                            li.setAttribute("tabindex", "1")
                            li.setAttribute("class", "list")
                            li.setAttribute("onclick", "timeSlotClicked('slot" + i + "')")

                            let div = document.createElement("div")

                            let span = document.createElement("span")
                            span.setAttribute("data-value", key + i)
                            span.setAttribute("class", "timeDisplay")
                            span.innerHTML = timeSlots[i]

                            div.appendChild(span)
                            li.appendChild(div)
                            slotDisplay.appendChild(li)
                        }
                        else { }
                    }
                });

                let display = document.getElementById("slotSection")
                display.classList.remove("hide")
            }
        }

        function bookSlot() {
            let studio = document.getElementById("studioSelect").value
            let day = fetchDays[picker.getDay()]
            let timeSlot = lastClickedTimeSlot

            if (studio && timeSlot) {
                fetch("/faculty-slot-booking", {
                    headers: { 'Content-Type': "application/json" },
                    method: "POST",
                    body: JSON.stringify({ flag: '1', day: day, studio: studio, timeSlot: timeSlot }),
                }).then(res => res.json()).then(data => {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Slot Booked Succesfully',
                        showConfirmButton: false,
                        timer: 1500
                    }).then((temp) => {
                        location.reload();
                    })
                });
            }
            else {
                Swal.fire({
                    position: 'center',
                    icon: 'error',
                    title: 'Select a Slot First',
                    showConfirmButton: true
                })
            }

        }

        async function unBook(key) {
            let dataList = key.split("_")
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger m-2',
                    denyButton: 'btn btn-success  m-3'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Type of Cancellation?',
                text: "select the type of cancellation",
                icon: 'warning',
                confirmButtonText: 'Only for today',
                showDenyButton: true,
                showCancelButton: true,
                denyButtonText: `Permanent`,
                cancelButtonText: 'cancel'
            }).then(async (cancellationType) => {
                if (cancellationType.isDenied || cancellationType.isConfirmed) {
                    const text = await Swal.fire({
                        input: 'textarea',
                        inputLabel: 'Message',
                        inputPlaceholder: 'Type the reason here...',
                        inputAttributes: {
                            'aria-label': 'Type your reason here'
                        },
                        inputValidator: (value) => {
                            if (!value) {
                                return 'You need to type Reason!'
                            }
                        },
                        allowOutsideClick: false,
                        showCancelButton: true
                    }).then((reason) => {
                        if (reason.isConfirmed) {
                            swalWithBootstrapButtons.fire({
                                title: 'Are you sure?',
                                text: "You won't be able to revert this!",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonText: 'Yes, delete it!',
                                cancelButtonText: 'No, cancel!',
                                reverseButtons: true
                            }).then((result) => {
                                let cancelType = ""
                                if (result.isConfirmed) {
                                    if (cancellationType.isConfirmed) {
                                        cancelType = "temp"
                                    }
                                    else {
                                        cancelType = "permanent"
                                    }
                                    fetch("/faculty-slot-booking", {
                                        headers: { 'Content-Type': "application/json" },
                                        method: "POST",
                                        body: JSON.stringify({ flag: "3", cancelType: cancelType, day: dataList[1], studio: dataList[0], timeSlot: dataList[2], reason: reason.value, detailSlot: dataList[3] }),
                                    }).then(res => res.json()).then(data => {
                                        console.log(data)
                                        if (data.status) {
                                            swalWithBootstrapButtons.fire(
                                                'Deleted!',
                                                'The Slot has been released.',
                                                'success'
                                            ).then((a) => {
                                                location.reload();
                                            })
                                        }
                                        else {
                                            swalWithBootstrapButtons.fire(
                                                'Error',
                                                'Something went wrong!',
                                                'error'
                                            )
                                        }
                                    });
                                }
                                else if (result.dismiss === Swal.DismissReason.cancel) {
                                    swalWithBootstrapButtons.fire(
                                        'Cancelled',
                                        'The Slot is not cancelled',
                                        'error'
                                    )
                                }
                            })
                        }
                        else {
                            swalWithBootstrapButtons.fire(
                                'Cancelled',
                                'The Slot is not cancelled',
                                'error'
                            )
                        }
                    })
                }
                else {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'The Slot is not cancelled',
                        'error'
                    )
                }
            })
        }
    </script>
</body>
<footer style="position: fixed;bottom: 0;height: 1rem;width: 100%;">
    <div class="copyright text-center text-light">
        <h6 style="font-size: 0.9em;">Copyright &copy VITOL 2022</h6>
    </div>
</footer>

</html>