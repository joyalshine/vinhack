<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel='stylesheet' href='/stylesheets/styleConfirmationPage.css' />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css"
        integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous" />
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js"
        integrity="sha384-oesi62hOLfzrys4LxRF63OJCXdXDipiYWBnvTl9Y9/TRlw5xlKIEHpNyvvDShgf/" crossorigin="anonymous">
        </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
        integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
    <div class="overlay" onclick="off()"></div>
    <header class="text-center" id="preProductionHomeHeader">
        <div class="">
            <img src="https://vit.ac.in/files/gravitas19/images/vit_white.png" id="preProductionHomeLogo" alt="">
        </div>
        <div class="topright">
            <a href="" style="text-decoration: none; color:#fff">
                <img src="https://cdn-icons-png.flaticon.com/128/3237/3237472.png" width="40" height="40" alt="">
                {{user.facultyName}}
            </a>
        </div>
    </header>
    <div class="containerMain">
        <a href="#" class="toggleBox">
            <span class="icon"></span>
        </a>
        <ul class="navItems">
            <li>
                <a href="/faculty-home">
                    <i class="fa fa-home" style="--i:1"></i>
                    <span style="--g:1">home</span>
                </a>
            </li>
            <li>
                <a href="/faculty-course-plan">
                    <i class="fa fa-solid fa-book" style="--i:2"></i>
                    <span style="--g:2">Course Plan</span>
                </a>
            </li>
            <li>
                <a href="/faculty-confirmation">
                    <i class="fa-solid fa-check-to-slot" style="--i:3"></i>
                    <span style="--g:3">Confirmation</span>
                </a>
            </li>
            <li>
                <a href="/faculty-slot-booking">
                    <i class="fa-solid fa-user" style="--i:4"></i>
                    <span style="--g:4">Slot Booking</span>
                </a>
            </li>
            <li>
                <a href="/logout">
                    <i class="fa-solid fa-right-from-bracket" style="--i:5"></i>
                    <span style="--g:5">logout</span>
                </a>
            </li>
        </ul>
    </div>

    <section id="tableSection" class="table-responsive-lg p-4" style="overflow-x:auto;">
        <div class="row text-center mb-2">
            <h2 style="color: #004bff;">Details</h2>
        </div>

        <table class="table table-sm table-bordered table-hover">
            <tr>
                <th scope="col" style="width: 250px;" class="text-center">W-Sno</th>
                <td id="key">{{W}}</td>
            </tr>
            <tr>
                <th scope="col" class="text-center">Topic</th>
                <td>{{topic}}</td>
            </tr>
            <tr>
                <th scope="col" class="text-center">Youtube Link</th>
                <td><a href="{{link}}" style="text-decoration: none">{{link}}</a></td>
            </tr>
            <tr>
                <th scope="col" class="text-center">Duration</th>
                <td id="duration">{{duration}}</td>
            </tr>
            <tr>
                <th scope="col" class="text-center">Remarks</th>
                <td id="duration">{{remarks}}</td>
            </tr>
        </table>
    </section>
    <section id="tableSection2" class="text-center p-5" style="display:flex; justify-content:center;">
        <button class="btn btn-primary col-md-2 m-3" id="courseId" value="{{id}}" onclick="confirm()">Confirm</button>
        <button type="button" class="btn btn-primary col-md-2 m-3" data-toggle="modal" data-target="#exampleModal">
            Raise a ticket </button>
    </section>
    <section style="text-align: center;">
        <div class="container mt-3" style="width: 700px;">
            <div class="modal fade" id="exampleModal">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">
                                New message
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">
                                    Ã—
                                </span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form>
                                <div class="mb-3">
                                    <label for="recipient-name" class="col-form-label">
                                        Feedback
                                    </label>
                                    <textarea type="text" class="form-control" id="feedback"></textarea>
                                </div>
                                <div class="mb-2">
                                    <label for="message-text" class="col-form-label">
                                        Cuts:
                                    </label>
                                    <div class="row">
                                        <div class="col-10">
                                            <input class="form-control" style="height: 30px;" id="cut-text"
                                                disabled></input>
                                        </div>
                                        <div class="col-2">
                                            <button type="button" class="btn btn-primary" onclick="cutAdd()">
                                                Add
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="mb-2">
                                    <label for="message-text" class="col-form-label">
                                        Edits:
                                    </label>
                                    <div class="row">
                                        <div class="col-10"><input class="form-control" style="height: 30px;"
                                                id="edit-text" disabled></input>
                                        </div>
                                        <div class="col-2">
                                            <button type="button" class="btn btn-primary" onclick="editAdd()">
                                                Add
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </form>

                            <div class="price-input">
                                <div class="field">
                                    <span>From</span>
                                    <input type="number" id="input-fromM" placeholder="">
                                </div>
                                <div class="separator1">:</div>
                                <div class="field">
                                    <input type="number" id="input-fromS" placeholder="">
                                </div>
                                <div class="separator">-</div>
                                <div class="field">
                                    <span>Till</span>
                                    <input type="number" id="input-toM" placeholder="">
                                </div>
                                <div class="separator1">:</div>
                                <div class="field">
                                    <input type="number" id="input-toS" placeholder="">
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">
                                Close
                            </button>
                            <button type="button" class="btn btn-primary" onclick="raiseTicket()" data-dismiss=""
                                id="modalDismissButton">
                                Send
                            </button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        </div>
    </section>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js"
        integrity="sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js"
        integrity="sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK"
        crossorigin="anonymous"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>
        var toggleClick = document.querySelector(".toggleBox");
        var containerMain = document.querySelector(".containerMain");
        var overlayScreen = document.querySelector(".overlay");

        toggleClick.addEventListener('click', () => {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        })

        function off() {
            toggleClick.classList.toggle('active');
            overlayScreen.classList.toggle('active');
            containerMain.classList.toggle('active');
        }
        async function confirm() {
            let id = document.getElementById('courseId').value
            const { value: accept } = await Swal.fire({
                title: 'Terms and conditions',
                input: 'checkbox',
                inputValue: 1,
                inputPlaceholder:
                    'I agree to push the video to LMS',
                confirmButtonText:
                    'Continue <i class="fa fa-arrow-right"></i>',
                inputValidator: (result) => {
                    return !result && 'You need to agree with T&C'
                }
            })
            if (accept) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Your Succesfully confirmed the video',
                    showConfirmButton: false,
                    timer: 2000
                }).then((response) => {
                    let key = document.getElementById('key').innerHTML
                    method = 'post';
                    let duration = document.getElementById("duration").innerText.split(":")
                    var form = document.createElement('form');
                    form.setAttribute('method', method);
                    form.setAttribute('action', "/confirmation-page");

                    var hiddenField = document.createElement('input');
                    hiddenField.setAttribute('type', 'hidden');
                    hiddenField.setAttribute('name', "id");
                    hiddenField.setAttribute('value', id);

                    var hiddenField1 = document.createElement('input');
                    hiddenField1.setAttribute('type', 'hidden');
                    hiddenField1.setAttribute('name', "confirm");
                    hiddenField1.setAttribute('value', true);

                    var hiddenField2 = document.createElement('input');
                    hiddenField2.setAttribute('type', 'hidden');
                    hiddenField2.setAttribute('name', "key");
                    hiddenField2.setAttribute('value', key);

                    var hiddenField3 = document.createElement('input');
                    hiddenField3.setAttribute('type', 'hidden');
                    hiddenField3.setAttribute('name', "mins");
                    hiddenField3.setAttribute('value', duration[0]);

                    var hiddenField4 = document.createElement('input');
                    hiddenField4.setAttribute('type', 'hidden');
                    hiddenField4.setAttribute('name', "sec");
                    hiddenField4.setAttribute('value', duration[1]);

                    form.appendChild(hiddenField);
                    form.appendChild(hiddenField1);
                    form.appendChild(hiddenField2);
                    form.appendChild(hiddenField3);
                    form.appendChild(hiddenField4);

                    document.body.appendChild(form);
                    form.submit();
                })
            }
            else { }

        }

        async function raiseTicket() {
            let id = document.getElementById('courseId').value
            var feedback = document.getElementById("feedback").value
            var cuts = document.getElementById("cut-text").value
            var edits = document.getElementById("edit-text").value
            let key = document.getElementById('key').innerHTML

            if (feedback == "") {
                Swal.fire(
                    'Oops..',
                    'Enter feedback!',
                    'error'
                )
            }
            else {
                if (cuts == "" && edits == "") {
                    Swal.fire(
                        'Oops..',
                        'Enter Cuts/Edits',
                        'error'
                    )
                }
                else {
                    let modalButton = document.getElementById("modalDismissButton")
                    modalButton.setAttribute("data-dismiss", "modal")
                    modalButton.click()
                    method = 'post';
                    var form = document.createElement('form');
                    form.setAttribute('method', method);
                    form.setAttribute('action', "/confirmation-page");

                    var hiddenField = document.createElement('input');
                    hiddenField.setAttribute('type', 'hidden');
                    hiddenField.setAttribute('name', "id");
                    hiddenField.setAttribute('value', id);

                    var hiddenField1 = document.createElement('input');
                    hiddenField1.setAttribute('type', 'hidden');
                    hiddenField1.setAttribute('name', "feedback");
                    hiddenField1.setAttribute('value', feedback);

                    var hiddenField2 = document.createElement('input');
                    hiddenField2.setAttribute('type', 'hidden');
                    hiddenField2.setAttribute('name', "cuts");
                    hiddenField2.setAttribute('value', cuts);

                    var hiddenField3 = document.createElement('input');
                    hiddenField3.setAttribute('type', 'hidden');
                    hiddenField3.setAttribute('name', "edits");
                    hiddenField3.setAttribute('value', edits);

                    var hiddenField4 = document.createElement('input');
                    hiddenField4.setAttribute('type', 'hidden');
                    hiddenField4.setAttribute('name', "confirm");
                    hiddenField4.setAttribute('value', false);

                    var hiddenField5 = document.createElement('input');
                    hiddenField5.setAttribute('type', 'hidden');
                    hiddenField5.setAttribute('name', "key");
                    hiddenField5.setAttribute('value', key);

                    form.appendChild(hiddenField);
                    form.appendChild(hiddenField1);
                    form.appendChild(hiddenField2);
                    form.appendChild(hiddenField3);
                    form.appendChild(hiddenField4);
                    form.appendChild(hiddenField5);

                    document.body.appendChild(form);
                    await Swal.fire({
                        icon: 'success',
                        title: 'Your Ticket has been raised',
                        showConfirmButton: false,
                        timer: 2000
                    }).then((response) => {

                        form.submit();
                    })

                }
            }
        }



        var exampleModal =
            document.getElementById("exampleModal");
        exampleModal.addEventListener(
            "show.bs.modal", function (event) {

                var button = event.relatedTarget;

                var modalTitle =
                    exampleModal.querySelector(".modal-title");
                var modalBodyInput =
                    exampleModal.querySelector(".modal-body input");
                modalTitle.textContent = "Raise a Ticket";
            });

        const Toast = Swal.mixin({
            toast: true,
            position: 'top',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        function cutAdd() {
            let display = document.getElementById('cut-text')
            var fromM = document.getElementById('input-fromM')
            var fromS = document.getElementById('input-fromS')
            var toM = document.getElementById('input-toM')
            var toS = document.getElementById('input-toS')
            if (fromM.value == "" || fromS.value == "" || toM.value == "" || toS.value == "") {
                Toast.fire({
                    icon: 'error',
                    title: 'Enter the from and to Time'
                })
            } else {
                display.value = display.value + fromM.value + ":" + fromS.value + "-" + toM.value + ":" + toS.value + " " + "|" + " "
                fromM.value = ""
                fromS.value = ""
                toM.value = ""
                toS.value = ""
            }
        }

        function editAdd() {
            let display = document.getElementById('edit-text')
            var fromM = document.getElementById('input-fromM')
            var fromS = document.getElementById('input-fromS')
            var toM = document.getElementById('input-toM')
            var toS = document.getElementById('input-toS')
            if (fromM.value == "" || fromS.value == "" || toM.value == "" || toS.value == "") {
                Toast.fire({
                    icon: 'error',
                    title: 'Enter the from and to Time'
                })
            } else {
                display.value = display.value + fromM.value + ":" + fromS.value + "-" + toM.value + ":" + toS.value + " " + "|" + " "
                fromM.value = ""
                fromS.value = ""
                toM.value = ""
                toS.value = ""
            }
        }
    </script>
</body>

</html>